{"version":3,"sources":["assets/images/back.jpg","pages/Home/Home.js","components/Movie/MovieCard.js","components/Movie/index.js","pages/Movies/Movies.js","components/Actors/index.js","components/Actors/Actors.js","pages/Movies/SingleMovie.js","pages/TVShows/TVShows.js","pages/TVShows/SingleShow.js","pages/TopRating/TopRating.js","pages/LastMovies/LastMovies.js","pages/LastMovies/SingleLastMovies.js","pages/Upcoming/UpComing.js","pages/SearchPage/SearchPage.js","pages/ActorMovie/ActorsMovie.js","pages/Recomendation/Recom.js","assets/images/icons/logo.png","containers/Header/index.js","containers/Header/Header.js","App.js","index.js"],"names":["Home","className","src","BackImg","alt","MovieCard","id","rating","imgLink","title","release","to","Movies","useState","isFetched","data","error","movieList","setMovieList","useEffect","axios","get","params","api_key","then","response","catch","console","log","results","map","movie","index","Movie","vote_average","poster_path","release_date","Actors","name","charname","SingleMovies","match","movieInfo","setMovieInfo","actorInfo","setActorInfo","recomen","setRecomen","cast","backdrop_path","overview","genres","genre","budget","actor","character","profile_path","item","TVShows","SingleShows","TopRating","LastMovies","latest","setLatest","SingleLastMovies","UpComing","SearchPage","search","setSearch","result","setResult","Search","Input","placeholder","allowClear","onSearch","value","style","width","ActorsMovie","movieActor","setActorList","Recomen","Header","Logo","App","exact","path","component","SingleMovie","SingleShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02ffd206.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.691f131b.jpg\";","import BackImg from '../../assets/images/back.jpg'\n\n\nimport './main.scss'\nconst Home = ()=>{\n    return(\n        <div className=\"salo\">\n\n        <div className=\"text\">\n            \n            <h1>Unlimited movies, TV shows, and more.</h1>\n            <h2>Coming Soon!</h2>\n        </div>\n            <div className=\"video\">\n                <img src={BackImg} alt=\"\"/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Home;","import { Link } from 'react-router-dom'\n\nimport './main.scss'\n\nconst MovieCard = ({id, rating, imgLink, title, release,}) =>{\n    return (\n            <Link to={`/movie/${id}`} className=\"movie-card\">\n                <span className=\"movie-rating\">{rating}</span>\n                <div className=\"class\">\n                <img src={imgLink} alt=\"\" className=\"movie-img\"/>\n                </div>\n                <h2 className=\"movie-title\">{title}</h2>\n                <span className=\"movie-data\">{release}</span>\n            </Link>\n    )\n}\n\nexport default MovieCard;","import MovieCard from './MovieCard'\n\nexport default MovieCard;","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie'\n\nimport './main.scss'\nconst Movies = ()=>{\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n\n\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setMovieList({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setMovieList({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, []);\n\n    console.log(movieList.data);\n\n    return(\n        <div className=\"container\">\n            {\n                movieList.isFetched ? (\n                    <div className=\"movie-list\"> \n                        {\n                            movieList.data.results.map((movie, index) =>(\n                                <MovieCard\n                                    id = {movie.id}\n                                    key = {index}\n                                    title = {movie.title}\n                                    rating = {movie.vote_average}\n                                    imgLink = {`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                                    release = {movie.release_date}\n                                />\n                            ))\n                        }\n                    </div>\n                ) : (\n                    <h1>Loading ...</h1>\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default Movies;","import Actors from './Actors'\n\nexport  default Actors;","import { Link } from 'react-router-dom'\n\nimport './main.scss'\n\nconst Actors = ({id, name, charname, imgLink})=>{\n\n    return(\n        <Link to={`/person/${id}`} className=\"actor-info\">\n            <img src={imgLink} alt=\"\"/>\n            <h3 className=\"actor-name\">{name}</h3>\n            <h4 className=\"actor-charname\">{charname}</h4>\n        </Link>\n    )\n}\n\nexport default Actors;","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Actors from '../../components/Actors'\nimport './main2.scss'\n\nimport MovieCard from '../../components/Movie/MovieCard'\n\nconst SingleMovies = ({ match })=>{\n    const [movieInfo, setMovieInfo] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    const [actorInfo, setActorInfo] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    const [ recomen, setRecomen ] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n\n\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setMovieInfo({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setMovieInfo({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n\n        axios.get(`https://api.themoviedb.org/3/movie/${match.params.id}/credits`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setActorInfo({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setActorInfo({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n\n\n        axios.get (`https://api.themoviedb.org/3/movie/${match.params.id}/recommendations`,{\n            params:{\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n\n        .then(function(response){\n            setRecomen({\n                isFetched: true,\n                data: response.data.results,\n                error: false\n            })\n        })\n\n        .catch(function(error){\n            setRecomen({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, [match]);\n\n    const Actor = actorInfo.data.cast\n    console.log(recomen);\n\n    return(\n        <div className=\"container\">\n            {\n                movieInfo.isFetched ? (\n                    <div className=\"movie-info-card\">\n                        <img className=\"back-img\" src={`https://image.tmdb.org/t/p/w500/${movieInfo.data.backdrop_path}`} alt=\"\"/>\n                        <h1 className=\"movie-info-title\">{movieInfo.data.title}</h1>\n                        <p className=\"movie-info-overview\">{movieInfo.data.overview}</p>\n                        <div className=\"vote\">\n                            <span className=\"display\">FULLHD</span>\n                            {\n                                movieInfo.data.genres.map((genre, index)=>(\n                                    <button key={index}>{genre.name}</button>\n                                ))\n                            }\n                        </div>\n                        <div className=\"date\">\n                            <h4 className=\"movie-info-date\">{movieInfo.data.release_date}</h4>\n                            <h4 className=\"movie-info-budget\">{'$',movieInfo.data.budget}</h4>\n                        </div>\n                        <h2 className=\"movie-info-vote\">{movieInfo.data.vote_average}</h2>\n\n                        <div className=\"actors-list\">\n                            {\n                                actorInfo.isFetched ? (\n                                    <div className=\"actor-card\">\n                                        {\n                                            actorInfo.data.cast.map((actor, index)=>(\n                                                <Actors\n                                                id = {actor.id}\n                                                key = {index}\n                                                name = {actor.name}\n                                                charname = {actor.character}\n                                                imgLink = {`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                                            />\n                                            ))\n\n                                        }\n                                    </div>\n                                ) : (\n                                    <h1>Loading...</h1>\n                                )\n                            }\n                        </div>\n                    </div>\n                    \n                ) : (\n                    <h1>Loading...</h1>\n                )\n\n            }\n\n            <div className=\"recomen-movie\">\n                {\n                    recomen.isFetched ? (\n                        <div className=\"wrapper-recomen\">\n                            {\n                                recomen.data.map(item =>(\n                                    <MovieCard\n                                        id = {item.id}\n                                        imgLink = {`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                                        rating = {item.vote_average}\n                                        title = {item.title}\n                                        release = {item.release_date}\n                                    />\n                                ))\n                            }\n                        </div>\n                    ):(\n                        <h1>Fuck you bitch !!!</h1>\n                    )\n                }\n            </div>\n        </div>\n        \n    )\n}\n\nexport default SingleMovies;","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie'\n\nconst TVShows = ()=>{\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n\n\n        axios.get(`https://api.themoviedb.org/3/tv/popular`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setMovieList({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setMovieList({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, []);\n\n    console.log(movieList.data);\n\n    return(\n        <div className=\"container\">\n            {\n                movieList.isFetched ? (\n                    <div className=\"movie-list\"> \n                        {\n                            movieList.data.results.map((movie, index) =>(\n                                <MovieCard\n                                    id = {movie.id}\n                                    key = {index}\n                                    title = {movie.title}\n                                    rating = {movie.vote_average}\n                                    imgLink = {`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                                    release = {movie.release_date}\n                                />\n                            ))\n                        }\n                    </div>\n                ) : (\n                    <h1>Loading ...</h1>\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default TVShows;","const SingleShows = ()=>{\n    return(\n        <h1>SingleShows Page</h1>\n    )\n}\n\nexport default SingleShows;","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie'\n\nimport '../Movies/main.scss'\nconst TopRating = ()=>{\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n\n\n        axios.get(`https://api.themoviedb.org/3/movie/top_rated`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setMovieList({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setMovieList({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, []);\n\n    console.log(movieList.data);\n\n    return(\n        <div className=\"container\">\n            {\n                movieList.isFetched ? (\n                    <div className=\"movie-list\"> \n                        {\n                            movieList.data.results.map((movie, index) =>(\n                                <MovieCard\n                                    id = {movie.id}\n                                    key = {index}\n                                    title = {movie.title}\n                                    rating = {movie.vote_average}\n                                    imgLink = {`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                                    release = {movie.release_date}\n                                />\n                            ))\n                        }\n                    </div>\n                ) : (\n                    <h1>Loading ...</h1>\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default TopRating;","import { useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie'\n\nconst LastMovies = ()=>{\n\n    const [latest, setLatest] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n        axios.get(`https://api.themoviedb.org/3/movie/latest`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n\n        .then(function (response){\n            setLatest({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n\n        .catch(function (error) {\n            setLatest({\n                isFetched: true,\n                data:[],\n                error: error\n            })\n        })\n        \n    },[])\n\n    console.log('salom',latest.data);\n\n\n\n    return(\n        latest.isFetched ? (\n            <div className=\"movie-list\">\n                <MovieCard\n                    id = {latest.data.id}\n                    rating = {latest.data.vote_average}\n                    imgLink = {`https://image.tmdb.org/t/p/w500/${latest.data.poster_path}`}\n                    title  = {latest.data.title}\n                    release = {latest.data.release_date}\n                />\n            </div>\n        ):(\n            <h1>Loading ...</h1>\n        )\n    )\n}\n\nexport default LastMovies;","const SingleLastMovies = ()=>{\n    return(\n        <h1>SingleLast</h1>\n    )\n}\n\nexport default SingleLastMovies","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie'\n\nconst UpComing = ()=>{\n\n    const [movieList, setMovieList] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(()=>{\n\n\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n        .then(function (response) {\n            setMovieList({\n                isFetched: true,\n                data: response.data,\n                error: false\n            })\n        })\n        .catch(function (error) {\n            setMovieList({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, []);\n\n    console.log(movieList.data);\n\n    return(\n        <div className=\"container\">\n            {\n                movieList.isFetched ? (\n                    <div className=\"movie-list\"> \n                        {\n                            movieList.data.results.map((movie, index) =>(\n                                <MovieCard\n                                    id = {movie.id}\n                                    key = {index}\n                                    title = {movie.title}\n                                    rating = {movie.vote_average}\n                                    imgLink = {`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                                    release = {movie.release_date}\n                                />\n                            ))\n                        }\n                    </div>\n                ) : (\n                    <h1>Loading ...</h1>\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default UpComing;","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport MovieCard from '../../components/Movie/MovieCard'\n\nimport '../../components/Movie/main.scss'\n\nimport 'antd/dist/antd.css'\nimport './main.scss'\nimport { Input, Space } from 'antd';\n\nconst SearchPage = ()=>{\n\n\n    const [search, setSearch] = useState('')\n    const [result, setResult] = useState({\n        isFetched: false,\n        data: [],\n        error: null\n    })\n\n\n    useEffect(()=>{\n        axios.get(`https://api.themoviedb.org/3/search/movie?query=${search}`,{\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n\n        .then(function (response) {\n            setResult({\n                isFetched: true,\n                data: response.data.results,\n                error: false\n            })\n            \n        })\n        .catch(function (error) {\n            setResult({\n                isFetched: true,\n                data: [],\n                error: error\n            })\n        })\n    }, [search])\n    \n    console.log(result);\n\nconst { Search } = Input;\n\n    return(\n        <div className=\"wrapper-movie\">\n\n            <Search className=\"input\" placeholder=\"input search text\" allowClear onSearch={(value)=> setSearch(value)} style={{ width: 200 }} />\n                <div className=\"form\">\n                        {\n                            result.isFetched ? (\n                                    result.data.map((movie, index) =>(\n                                        <MovieCard\n                                            id = {movie.id}\n                                            key = {index}\n                                            title = {movie.title}\n                                            rating = {movie.vote_average}\n                                            imgLink = {`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                                            release = {movie.release_date}\n                                            />\n                                            ))\n                        ) : (\n                            <h1>Loading ...</h1>\n                            )\n                    }\n                </div>\n                    </div>\n    )\n}\n\nexport default SearchPage;","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nimport MovieCard from '../../components/Movie/MovieCard'\n\n\n\n\nconst ActorsMovie = ({ match }) => {\n\n\n    const [movieActor, setActorList] = useState({\n        isFetched: false,\n        data: {},\n        error: null\n    })\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/person/${match.params.id}/movie_credits`, {\n            params: {\n                api_key: '9c3eab726cd61f5987bf26a9e76a226c'\n            }\n        })\n\n            .then(function (response) {\n                setActorList({\n                    isFetched: true,\n                    data: response.data,\n                    error: null\n                })\n            })\n            .catch(function (error) {\n                setActorList({\n                    isFetched: true,\n                    data: [],\n                    error: error\n                })\n            })\n    }, [])\n\n    console.log(movieActor);\n\n    return (\n        <div className=\"content\">\n            {\n                movieActor.isFetched ? (\n                    movieActor.data.cast.map(item => (\n                        <div className=\"movie-card\">\n                            <MovieCard\n                            id = {item.id}\n                            title = {item.title}\n                            rating = {item.vote_average}\n                            imgLink = {`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\n                            release = {item.release_date}\n                        />\n                        </div>\n                    ))\n                ) : (\n                    <h1>Fucking</h1>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default ActorsMovie;\n","import { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\nconst Recomen = ()=>{\n\n    return(\n        <h1>Salom</h1>\n    )\n}\n\nexport default Recomen;","export default __webpack_public_path__ + \"static/media/logo.710fa500.png\";","import Header from './Header'\n\nexport default Header;","import { Link }from 'react-router-dom'\nimport './main.scss'\n\nimport Logo from '../../assets/images/icons/logo.png'\n\nconst Header = ()=>{\n    return(\n        <div className=\"header\">\n            <div className=\"container\">\n\n                <Link to=\"/\" className=\"header-logo\">\n                    <img src={Logo} alt=\"Logo\"/>\n                </Link>\n\n                <div className=\"header-links\">\n                    <Link to=\"/movies\" className=\"header-link\">Movies</Link>\n                    <Link to=\"/tv-show\" className=\"header-link\">TVShows</Link>\n                    <Link to=\"/top-rating\" className=\"header-link\">Top Rating</Link>\n                    <Link to=\"/last-movie\" className=\"header-link\">Last Movies</Link>\n                    <Link to=\"/up-coming\" className=\"header-link\">Up Coming</Link>\n                    <Link to=\"/search\" className=\"header-link\">Search</Link>\n                </div>\n\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n}from 'react-router-dom';\n\nimport {\n  Home,\n  Movies,\n  SingleMovie,\n  SingleShow,\n  TVShows,\n  TopRating,\n  LastMovies,\n  SingleLastMovies,\n  UpComing,\n  SearchPage,\n  ActorsMovie,\n  Recomen\n}from './pages'\n\n\nimport Header from './containers/Header'\n\n\nimport './assets/styles/main.scss'\n\nfunction App() {\n  return (\n      <div className=\"wrapper\">\n\n\n        <Router>\n          <Header/>\n\n\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/movies\" component={Movies}/>\n            <Route exact path=\"/tv-show\" component={TVShows}/>\n            <Route exact path=\"/top-rating\" component={TopRating}/>\n            <Route exact path=\"/last-movie\" component={LastMovies}/>\n            <Route exact path=\"/up-coming\" component={UpComing}/>\n            <Route exact path=\"/movie/:id\" component={SingleMovie}/>\n            <Route exact path=\"/tv-show/:id\" component={SingleShow}/>\n            <Route exact path=\"/last-movie/:id\" component={SingleLastMovies}/>\n            <Route exact path=\"/person/:id\" component={ActorsMovie}/>\n            <Route exact path=\"/search\" component={SearchPage}/>\n            <Route exact path=\"/recomen/:id\" component={Recomen}/>\n          </Switch>\n        </Router>\n      </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}